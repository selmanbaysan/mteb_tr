from __future__ import annotations

from mteb.abstasks.AbsTaskClassification import AbsTaskClassification
from mteb.abstasks.TaskMetadata import TaskMetadata


class Turkish75NewsClassification(AbsTaskClassification):
    metadata = TaskMetadata(
        name="Turkish75NewsClassification",
        description="75 News dataset contains 15 Turkish news articles from 5 different topics: economics, magazine, "
                    "health, politics and sports. Dataset is generated by Kemik Natural Language Processing Group.",
        reference="http://www.kemik.yildiz.edu.tr/veri_kumelerimiz.html",
        dataset={
            "path": "trmteb/75haber",
            "revision": "main",
        },
        type="Classification",
        category="s2s",
        modalities=["text"],
        eval_splits=["test"],
        eval_langs=["tur-Latn"],
        main_score="accuracy",
        domains=["News", "Written"],
        task_subtypes=["Topic classification"],
        bibtex_citation="""
        @article{amasyali2004otomatik,
          title={Otomatik haber metinleri s{\i}n{\i}fland{\i}rma},
          author={Amasyal{\i}, MF and Y{\i}ld{\i}r{\i}m, T},
          journal={SIU 2004},
          pages={224--226},
          year={2004}
        }
        """,
    )
    def dataset_transform(self):
        self.dataset = self.dataset["test"]
        self.dataset = self.dataset.class_encode_column("label")
        self.dataset = self.dataset.train_test_split(test_size=0.2, seed=self.seed, stratify_by_column="label")

